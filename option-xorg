#!/bin/bash
########################################################################
#
#
#                       script: option-xorg
#                   adapted by: Dan Purgert    
#                  original by: Two_Dogs
#                      version: 0.1
#                         date: Sat Apr 23 15:00:55 EDT 2016
#                      purpose: Create a logfile of general system
#                             : settings that will allow the linux
#                             : mint community members to assist 
#                             : the individual running it.
#
#                      license: GPL v2 (only)
#                   repository: http://github.com/dpurgert
#              Two_Dogs source: http://github.com/two-dogs
#
#
########################################################################

if [ "$1" = "-h" ]; then
   printf "\n   option-xorg
   -------------

   This script will gather information about the X display system
   which may help the community troubleshoot the problem you are having.

   Options:
     -h    Print this help, and exit.
     -v    Verbose Mode.  Print to stdout and logfile

   USAGE:
     option-xorg 

   ------------- "

   exit 0
fi

exec 6>/dev/null 
if [ "$1" = "-v" ]; then
   #verbose   
   exec 6>&1
fi

# ask user if they want to execute root commands.
if [[ $EUID -eq 0 ]]; then
   printf "\n\n===================WARNING!!!====================\n"
   printf "Detected script being run as root user.  It is not\n"
   printf "advisable to do so, as any errors in this script,\n"
   printf "or in the commands that do not require elevated\n"
   printf "privileges can potentially harm your system.\n\n"
   printf "This script is designed to only elevate your user\n"
   printf "priveleges for the command(s) that require it, and\n"
   printf "then drop back to your standard user.\n\n"
   printf "Exiting.\n"
   exit 1
fi

if [ "$1" != "-v" ]; then
   printf "\nQuiet Mode: Final notification until program completes."
   printf "\nDo not press any keys until prompted.\n"
fi


 (
  date 
  printf "\n--OPTION XORG--\n\n--INXI START--\n"
  inxi -c0 -MSGIsprxx 
  printf "\n--INXI END--\n\n--BEGIN GRUB KERNEL OPTIONS--\n"
  grep -Ei 'GRUB_CMDLINE_' /etc/default/grub 
  printf "\--END GRUB KERNEL OPTIONS--\n\n--XRANDR BEGIN--\n"
  xrandr 
  printf "\n--XRANDR END--\n\n--DKMS STATUS START--\n"
  dkms status 
  printf "\n--DKMS STATUS END--\n\n--LSMOD START--\n"
  lsmod | grep -Ei 'vid|nvi|int|i9|fgl|nouv|rad|vbox|ndi' \
  | grep -Eiv 'snd' 
  printf "\n--LSMOD END--\n\n--TERM.LOG START--\n"
  grep -Ei 'g up|config|dkms|module|install|remov|err|fail' \
  /var/log/apt/term.log | grep -Ei \
  'radeon|nvidia|nouveau|intel|fglrx|vbox|Log started|Log ended' 
  printf "\n--TERM.LOG END--\n\n--DPKG START--\n"
  dpkg -l | grep -Ei 'nvidia|fglrx' 
  printf "\n--DPKG END--\n\n--WEBINSTALL START--\n"
  [ -d /usr/share/ati/ ] &&  grep -i fglrx || \
  printf "\nNo ATI drivers.\n"
  printf "\n--WEBINSTALL END--\n\n--XORG.0.LOG START--\n"
  [ -e /var/log/Xorg.0.log ] && \
  grep -Ewi 'kernel|conf|WW|EE' /var/log/Xorg.0.log || \
  printf "\nXorg.0.log does not exist.\n"
  printf "\n--XORG.0.LOG END--\n\n--SYSLOG START--\n;"
  grep -Ei 'fail|error|critical' /var/log/syslog
  printf "\nS--SYSLOG END--\n"
  date 
  ) | tee ~/option-xorg.log >&6 2>&1

printf "\n\n============================\n"
printf "COMPLETED! A copy has been saved to:\n"
printf "   $HOME/option-xorg.log\n"
printf "============================\n\n"

read -n1 -p "Share file to pastebin? [y|N]" "chk"

if [ "$chk" = "y" ] || [ "$chk" = "y" ];  then
   printf "\nProvide the following link to your helper:\n"
   printf "\n$(pastebin < ~/option-xorg.log)\n"
else
   printf "\nLogfile NOT uploaded to pastebin.\n"
   printf "Ask the person assisting you where to send it.\n"
fi

read -n1 -p "Remove the logfile? [y|N]" "chk"
if [ "$chk" = "y" ] || [ "$chk" = "Y" ];  then
   rm $HOME/option-xorg.log
   printf "\nLogfile removed.\n"
else
   printf "\nLogfile $HOME/option-xorg.log retained.\n"
fi
