#!/bin/bash
########################################################################
#
#
#                       script: option-mountspace
#                   adapted by: Dan Purgert    
#                  original by: Two_Dogs
#                      version: 0.1
#                         date: Sat Apr 23 10:44:22 EDT 2016
#                      purpose: Create a logfile detailing the ten
#                             : (10) largest directories on the 
#                             : system 
#
#                      license: GPL v2 (only)
#                   repository: http://github.com/dpurgert
#              Two_Dogs source: http://github.com/two-dogs
#
#
########################################################################

if [ "$1" = "-h" ]; then
   printf "\n   option-mountspace
   -------------

   This script will gather system disc usage information, and provide
   the ten (10) largest directories (excluding /) in order to assist
   the person running it find potential folders that need to be 
   cleaned.

   Options:
     -h    Print this help, and exit.
     -v    Verbose Mode.  Print to stdout and logfile

   USAGE:
     option-mountspace

   ROOT COMMANDS:
     This script requires elevated (root) privileges to run the \"du\"
     command in order to check system directories (e.g. /etc or /var),
     without allowing root to run \"du\", this script will not provide
     accurade disc usage information.

   ------------- "

   exit 0
fi

exec 6>/dev/null 
if [ "$1" = "-v" ]; then
   #verbose   
   exec 6>&1
fi

# ask user if they want to execute root commands.
if [[ $EUID -ne 0 ]]; then
   printf "\nThis script requires root permission to run the \"du\"\n"
   printf "command.\n"
   
   read -n 1 -p "Switch to root? [Y/n]" "chk"
   if [ "$chk" = "n" ] || [ "$chk" = "N" ]; then 
      #exit, user answered no
      printf "\n\nNOT switching to root.  Exiting.\n"
      exit 0
   else 
      #run as sudo
      sudo du -h / 2>/dev/null | grep '^[[:digit:]]*G' | sort -hr \
      | grep -v '/$' | -head -10 | tee ~/option-mountspace.log >&6 2>&1
   fi
else
   printf "\n\n===================WARNING!!!====================\n"
   printf "Detected script being run as root user.  It is not\n"
   printf "advisable to do so, as any errors in this script,\n"
   printf "or in the commands that do not require elevated\n"
   printf "privileges can potentially harm your system.\n\n"
   printf "This script is designed to only elevate your user\n"
   printf "priveleges for the command(s) that require it, and\n"
   printf "then drop back to your standard user.\n\n"
   printf "Exiting.\n"
   exit 1
fi

printf "\n\n============================\n"
printf "COMPLETED! A copy has been saved to:\n"
printf "   $HOME/option-mountspace.log\n"
printf "============================\n\n"

read -n1 -p "Share file to pastebin? [y|N]" "chk"

if [ "$chk" = "y" ] || [ "$chk" = "y" ];  then
   printf "\nProvide the following link to your helper:\n"
   printf "\n$(pastebin < ~/option-mountspace.log)\n"
else
   printf "\nLogfile NOT uploaded to pastebin.\n"
   printf "Ask the person assisting you where to send it.\n"
fi

read -n1 -p "Remove the logfile? [y|N]" "chk"
if [ "$chk" = "y" ] || [ "$chk" = "Y" ];  then
   rm $HOME/option-system.log
   printf "\nLogfile removed.\n"
else
   printf "\nLogfile $HOME/option-mountspace.log retained.\n"
fi
