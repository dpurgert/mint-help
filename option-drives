#!/bin/bash
########################################################################
#
#
#                       script: option-drives
#                   adapted by: Dan Purgert    
#                  original by: Two_Dogs
#                      version: 0.1
#                         date: Thu Apr 21 14:28:01 EDT 2016
#                      purpose: Creates a logfile centered around
#                             : hard drive details in order to 
#                             : allow the linux mint community members 
#                             : to assist the individual running it.
#
#                      license: GPL v2 (only)
#                   repository: http://github.com/dpurgert
#              Two_Dogs source: http://github.com/two-dogs
#
#
########################################################################

if [ "$1" = "-h" ]; then
   echo "   option-drives
   -------------

   This script will gather information related to your HDD which may 
   help the community troubleshoot the problem you are having.

   Options:
     -h    Print this help, and exit.
     -v    Verbose Mode.  Print to stdout and logfile

   USAGE:
     option-drives 

   ROOT COMMANDS:
     If allowed, this script will update inxi, and also run the
     partition manager (parted).  The script can be successfully run 
     without updating/allowing these, but some output may be less clear
     than if the script is allowed to run these commands.

   ------------- "

   exit 0
fi

exec 6>/dev/null 
if [ "$1" = "-v" ]; then
   #verbose   
   exec 6>&1
fi

# ask user if they want to execute root commands.
if [[ $EUID -ne 0 ]]; then
   echo "This script requires root permissions to update"
   echo "inxi and run parted."
   
   read -n 1 -p "Allow running root commands? [Y/n]" "chk"
   if [ "$chk" = "n" ] || [ "$chk" = "N" ]; then 
      #exit, user answered no
      printf "\n\nNOT updating inxi or running parted, if you would\n"
      printf "like more information about what these do, run with\n"
      printf "the -h option.\n"
      update="false"
      read -n1 -p "Continue without updating? [Y/n]" "chk"
      if [ "$chk" = "n" ] || [ "$chk" = "N" ]; then 
         printf "\nExiting\n"
         exit 0
      else
         printf "\nContinuing without update ...\n"
      fi 
   else
      printf "\nUpdating inxi and PCI IDs ... \n\n" 
      sudo inxi -U >&6 2>&1
      printf "\nRoot commands complete."
      printf "\nProgram will continue running as user: $USER.\n\n"
      update="true"
   fi
else
   printf "\n\n===================WARNING!!!====================\n"
   printf "Detected script being run as root user.  It is not\n"
   printf "advisable to do so, as any errors in this script,\n"
   printf "or in the commands that do not require elevated\n"
   printf "privileges can potentially harm your system.\n\n"
   printf "This script is designed to only elevate your user\n"
   printf "priveleges for the command(s) that require it, and\n"
   printf "then drop back to your standard user.\n\n"
   printf "Exiting.\n"
   exit 1
fi

if [ "$1" != "-v" ]; then
   printf "\nQuiet Mode: Final notification until program completes."
   printf "\nDo not press any keys until prompted.\n"
fi


(
if [ "$update" = "true" ]; then
   printf "\ninxi updated\n"
else
   printf "\ninxi NOT updated\n";
fi 

 echo "--ENF CHECK--" ;
 [ -d /sys/firmware/efi ] ;
 echo "EFI boot on HDD" || echo "Legacy boot on HDD" ;
 printf "\n--EFI END--\n\n--INXI BEGIN--\n";
 inxi -c0 -MSRduplo ;
 if [ "$update" = "true" ]; then
   printf "\n--INXI END--\n\n--PARTITIONS END--\n"; 
   sudo parted -l ;
   printf "\n--PARTITIONS END--\n\n--LSBLK BEGIN--\n";
 else
   printf "\n--INXI END\n\n--LSBLK BEGIN--\n";
 fi 
 
 lsblk -fmi ;

 printf "\n--LSBLK END--\n\n--FSTAB BEGIN--\n"
 cat /etc/fstab ;
 printf "\n--FSTAB END--\n"
) | tee ~/option-drives.log >&6 2>&1



printf "\n\n============================\n"
printf "COMPLETED! A copy has been saved to:\n"
printf "   $HOME/option-drives.log\n"
printf "============================\n\n"

read -n1 -p "Share file to pastebin? [y|N]" "chk"

if [ "$chk" = "y" ] || [ "$chk" = "y" ];  then
   printf "\nProvide the following link to your helper:\n"
   echo "$(pastebin < ~/option-drives.log)"
else
   printf "\nLogfile NOT uploaded to pastebin.\n"
   printf "Ask the person assisting you where to send it.\n"
fi

read -n1 -p "Remove the logfile? [y|N]" "chk"
if [ "$chk" = "y" ] || [ "$chk" = "Y" ];  then
   rm $HOME/option-drives.log
   printf "\nLogfile removed.\n"
else
   printf "\nLogfile $HOME/option-drives.log retained.\n"
fi

