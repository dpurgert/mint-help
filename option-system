#!/bin/bash
########################################################################
#
#
#                       script: option-system
#                   adapted by: Dan Purgert    
#                  original by: Two_Dogs
#                      version: 0.1
#                         date: Thu Apr 21 07:22:01 EDT 2016
#                      purpose: Create a logfile of general system
#                             : settings that will allow the linux
#                             : mint community members to assist 
#                             : the individual running it.
#
#                      license: GPL v2 (only)
#                   repository: http://github.com/dpurgert
#              Two_Dogs source: http://github.com/two-dogs
#
#
########################################################################

if [ "$1" = "-h" ]; then
   printf "   option-system
   -------------

   This script will gather system related information which may 
   help the community troubleshoot the problem you are having.

   Options:
     -h    Print this help, and exit.
     -v    Verbose Mode.  Print to stdout and logfile

   USAGE:
     option-system 

   ------------- "

   exit 0
fi

exec 6>/dev/null 
if [ "$1" = "-v" ]; then
   #verbose   
   exec 6>&1
fi

# forbid execution as root.
if [[ $EUID -eq 0 ]]; then
   printf "\n\n===================WARNING!!!====================\n"
   printf "Detected script being run as root user.  It is not\n"
   printf "advisable to do so, as any errors in this script,\n"
   printf "or in the commands that do not require elevated\n"
   printf "privileges can potentially harm your system.\n\n"
   printf "This script is designed to only elevate your user\n"
   printf "priveleges for the command(s) that require it, and\n"
   printf "then drop back to your standard user.\n\n"
   printf "Exiting.\n"
   exit 1
fi


if [ "$1" != "-v" ]; then
   printf "\nQuiet Mode: Final notification until program completes."
   printf "\nDo not press any keys until prompted.\n"
fi


(date
printf "\n--OPTION SYSTEM--\n\n--EFI CHECK START--\n"
[ -d /sys/firmware/efi ] && printf "\nEFI boot on HDD\n" \
 || printf "\nLegacy boot on HDD\n"
printf "\n--EFI CHECK END--\n\n--INXI START--\n"
inxi -c0 -Fzxxtcm5 
printf "\n--GRUB KERNEL OPTIONS START--"

grep -Ei 'GRUB_CMDLINE_' /etc/default/grub

printf "--GRUB KERNEL OPTIONS END--\n\n--X SESSION MANAGER START--\n"

update-alternatives --list x-session-manager

printf "--X SESSION MANAGER END--\n\n--DKMS STATUS START--\n"

dkms status

printf "\n--DKMS STATUS END--\n\n--SYSLOG START--\n"

grep -B1 -Ei 'fail|error|critical' /var/log/syslog

printf "\n--SYSLOG END--\n\n--VMWARE CHECK START--\n"
if grep -q vmmon /var/log/syslog ; then printf "\nfound vmware\n" ; fi 

printf "\n--VMWARE CHECK END--\n\n--DMESG START--\n"
dmesg | grep -B1 -Ei 'fail|error|critical'
printf "\n--DMESG END--\n"

date ) | tee ~/option-system.log >&6 2>&1

printf "\n\n============================\n"
printf "COMPLETED! A copy has been saved to:\n"
printf "   $HOME/option-system.log\n"
printf "============================\n\n"

read -n1 -p "Share file to pastebin? [y|N]" "chk"

if [ "$chk" = "y" ] || [ "$chk" = "y" ];  then
   printf "\nProvide the following link to your helper:\n"
   printf "\n$(pastebin < ~/option-system.log)\n"
else
   printf "\nLogfile NOT uploaded to pastebin.\n"
   printf "Ask the person assisting you where to send it.\n"
fi

read -n1 -p "Remove the logfile? [y|N]" "chk"
if [ "$chk" = "y" ] || [ "$chk" = "Y" ];  then
   rm $HOME/option-system.log
   printf "\nLogfile removed.\n"
else
   printf "\nLogfile $HOME/option-system.log retained.\n"
fi
